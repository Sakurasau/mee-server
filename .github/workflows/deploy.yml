name: Deployment

on:
  push:
    branches:
      - main

jobs:
  deployment:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Create Deployment
        id: create_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:owner/:repo/deployments
          owner: Sakurasau
          repo: mee-server
          ref: main
          environment: production
          description: Deploying to production
          auto_merge: false
          required_contexts: []
          headers: '{"Accept":"application/vnd.github.v3+json"}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Extract Deployment Status URL
        run: echo "DEPLOYMENT_STATUS_URL=$(jq -r '.statuses_url' < "$GITHUB_EVENT_PATH")" >> $GITHUB_ENV

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.OMI_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.OMI_SSH_SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Set deployment status to [in_progress]
        uses: rsotnychenko/deployment-status-update@0.2.1
        with:
          status: in_progress
          run_id: ${{ github.run_id }}
          deployment_status_url: ${{ env.DEPLOYMENT_STATUS_URL }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to Server
        run: |
          ssh ${{ secrets.OMI_SSH_USER }}@${{ secrets.OMI_SSH_SERVER_IP }} << 'EOF'
            cd /home/opc/projects/mee-server/
            git pull origin main
            sudo docker compose up -d --build
          EOF
      
      - name: Set deployment status
        uses: rsotnychenko/deployment-status-update@0.2.1
        with:
          status: ${{ job.status }}
          run_id: ${{ github.run_id }}
          deployment_status_url: ${{ env.DEPLOYMENT_STATUS_URL }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}