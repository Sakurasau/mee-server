x-common: &env
  env_file:
    - ./.env.production
  environment:
    NODE_ENV: production

services:
  pgdb:
    image: postgres:latest
    restart: on-failure
    ports:
      - ${PORT_POSTGRES}:${PORT_POSTGRES}
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
    container_name: mee-postgres
    <<: *env
  
  proxy:
    image: nginx:latest
    restart: always
    ports:
      - '80:80'
      - '443:443'
    volumes:
      # - ./nginx.conf:/etc/nginx/nginx.conf
      - ./nginx.template.conf:/etc/nginx/nginx.template.conf
      - /etc/ssl/mee.social:/etc/ssl/mee.social
    depends_on:
      - backend
      - client
    container_name: mee-proxy
    command: /bin/bash -c "envsubst < etc/nginx/nginx.template.conf > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
    <<: *env

  backend:
    build:
      context: .
      args:
        PORT_BACKEND: ${PORT_BACKEND}
        SERVER_BASE_PREFIX: ${SERVER_BASE_PREFIX}
        POSTGRES_CONNECTION_URL: ${POSTGRES_CONNECTION_URL}
    restart: always
    ports:
      - ${PORT_BACKEND}
    depends_on:
      - pgdb
    container_name: mee-backend
    <<: *env
  
  client:
    build:
      context: ../mee
      args:
        CLIENT_WEB_BASE_PREFIX: ${CLIENT_WEB_BASE_PREFIX}
        PORT_FRONTEND: ${PORT_FRONTEND}
    restart: always
    ports:
      - ${PORT_FRONTEND}
    container_name: mee-client
    <<: *env

  landing:
    build:
      context: ../mee-landing
      args:
        PORT: ${PORT_LANDING}
    restart: always
    ports:
      - ${PORT_LANDING}
    container_name: mee-landing
    <<: *env


volumes:
  pgdata: